{
  "address": "0x312ef2A035bA266Ed81e7C6CaC0e6d8929EEF13a",
  "abi": [
    {
      "inputs": [],
      "name": "Dispas__InsufficientValue",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Dispas__TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Dispas__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Dispas__ZeroAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentSent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataTypes.Payment[]",
          "name": "payments",
          "type": "tuple[]"
        }
      ],
      "name": "distributeFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3a3b32322796d5b4b085bfe0a80e8dc0aabc286b4f501a009d50c7359c8d7331",
  "receipt": {
    "to": null,
    "from": "0xB632C03F4F7fd78Ebb26E7E4c35e42Eba33E7e0e",
    "contractAddress": "0x312ef2A035bA266Ed81e7C6CaC0e6d8929EEF13a",
    "transactionIndex": 0,
    "gasUsed": "237654",
    "logsBloom": "0x
    "blockHash": "0x704e2c603998f8d60491cfdafc9c1fef2ba126631733006b9896126053f18063",
    "transactionHash": "0x3a3b32322796d5b4b085bfe0a80e8dc0aabc286b4f501a009d50c7359c8d7331",
    "logs": [],
    "blockNumber": 4409763,
    "cumulativeGasUsed": "237654",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "edf28929d8bbc2a30c5107a89d856835",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Dispas__InsufficientValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Dispas__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Dispas__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Dispas__ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentSent\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.Payment[]\",\"name\":\"payments\",\"type\":\"tuple[]\"}],\"name\":\"distributeFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Valentine Orga\",\"details\":\"Uses a single loop for efficiency, calldata structs to minimize gas, and robust error handling.\",\"events\":{\"FundsDistributed(address,uint256)\":{\"params\":{\"sender\":\"The address that initiated the distribution.\",\"totalAmount\":\"The total LYX amount distributed.\"}},\"PaymentSent(address,uint256)\":{\"params\":{\"amount\":\"The amount of LYX sent.\",\"recipient\":\"The address that received the payment.\"}}},\"kind\":\"dev\",\"methods\":{\"distributeFunds((address,uint256)[])\":{\"details\":\"Requires that each recipient is a valid address and receives a non-zero amount.      The total distributed amount must match `msg.value`.\",\"params\":{\"payments\":\"An array of `Payment` structs containing recipient addresses and corresponding amounts.\"}}},\"title\":\"Dispas - A Gas-Efficient LYX Distributor\",\"version\":1},\"userdoc\":{\"events\":{\"FundsDistributed(address,uint256)\":{\"notice\":\"Emitted when LYX is successfully distributed to multiple recipients.\"},\"PaymentSent(address,uint256)\":{\"notice\":\"Emitted when a single recipient successfully receives LYX.\"}},\"kind\":\"user\",\"methods\":{\"distributeFunds((address,uint256)[])\":{\"notice\":\"Distributes LYX to multiple recipients.\"}},\"notice\":\"This contract allows users to split LYX payments among multiple recipients.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/Dispas.sol\":\"Dispas\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDispas.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport { DataTypes } from \\\"../protocol/libraries/DataTypes.sol\\\";\\n\\n/**\\n * @title IDispas - Interface for LYX Distribution Contract\\n * @author Valentine Orga\\n * @notice Defines the interface for Dispas, a contract that allows LYX distribution to multiple addresses.\\n */\\ninterface IDispas {\\n    /// @notice Emitted when LYX is successfully distributed to multiple recipients.\\n    /// @param sender The address that initiated the distribution.\\n    /// @param totalAmount The total LYX amount distributed.\\n    event FundsDistributed(address indexed sender, uint256 totalAmount);\\n\\n    /// @notice Emitted when a single recipient successfully receives LYX.\\n    /// @param recipient The address that received the payment.\\n    /// @param amount The amount of LYX sent.\\n    event PaymentSent(address indexed recipient, uint256 amount);\\n\\n    /**\\n     * @notice Distributes LYX to multiple recipients.\\n     * @dev Requires that each recipient is a valid address and receives a non-zero amount.\\n     *      The total distributed amount must match `msg.value`.\\n     * @param payments An array of `Payment` structs containing recipient addresses and corresponding amounts.\\n     */\\n    function distributeFunds(DataTypes.Payment[] calldata payments) external payable;\\n}\\n\",\"keccak256\":\"0x472bfc1970d03b6e4d176a31b07e018743b8b15cd9501b0fe180db1f2160aee7\",\"license\":\"MIT\"},\"contracts/protocol/Dispas.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport { IDispas } from \\\"../interfaces/IDispas.sol\\\";\\nimport { DataTypes } from \\\"./libraries/DataTypes.sol\\\";\\n\\n/**\\n * @title Dispas - A Gas-Efficient LYX Distributor\\n * @author Valentine Orga\\n * @notice This contract allows users to split LYX payments among multiple recipients.\\n * @dev Uses a single loop for efficiency, calldata structs to minimize gas, and robust error handling.\\n */\\ncontract Dispas is IDispas {\\n    // ==========================\\n    // Errors\\n    // ==========================\\n    error Dispas__ZeroAddress();\\n    error Dispas__ZeroAmount();\\n    error Dispas__InsufficientValue();\\n    error Dispas__TransferFailed(address recipient, uint256 amount);\\n\\n    // ==========================\\n    // Functions\\n    // ==========================\\n\\n    /// @inheritdoc IDispas\\n    function distributeFunds(DataTypes.Payment[] calldata payments) external payable {\\n        uint256 distributedAmount = 0;\\n        uint256 paymentsLength = payments.length;\\n\\n        for (uint256 i = 0; i < paymentsLength; i++) {\\n            DataTypes.Payment calldata payment = payments[i];\\n\\n            // validate input\\n            require(payment.recipient != address(0), Dispas__ZeroAddress());\\n            require(payment.amount != 0, Dispas__ZeroAmount());\\n\\n            // track total distribution\\n            distributedAmount += payment.amount;\\n\\n            // ensure distributed amount does not exceed the full msg.value\\n            if (distributedAmount > msg.value) revert Dispas__InsufficientValue();\\n\\n            // attempt transfer\\n            (bool success, ) = payment.recipient.call{ value: payment.amount }(\\\"\\\");\\n            require(success, Dispas__TransferFailed(payment.recipient, payment.amount));\\n        }\\n\\n        // emit event for overall distribution\\n        emit FundsDistributed(msg.sender, msg.value);\\n    }\\n\\n    /// @dev Fallback function to prevent accidental LYX deposits.\\n    receive() external payable {\\n        revert(\\\"Direct deposits not allowed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1bafa4c3ac88e2f2f684e3a9175074598f14dc3d66a232930ec93770340f75e3\",\"license\":\"MIT\"},\"contracts/protocol/libraries/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\n/**\\n * @title DataTypes Library\\n * @author\\n * @notice Defines common data structures used in the Dispas contract.\\n * @dev This library is used to standardize data structures across the contract.\\n */\\nlibrary DataTypes {\\n    /**\\n     * @notice Represents a payment entry in the distribution process.\\n     * @dev Used in the `distributeFunds` function to store recipient details.\\n     * @param recipient The address receiving the payment.\\n     * @param amount The amount of LYX to be sent.\\n     */\\n    struct Payment {\\n        address recipient;\\n        uint256 amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1534b3f71648226d887a654aa5f9b71ff0bc347fc3fab6a151b0ec8f0ef54f0c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506103568061001f6000396000f3fe6080604052600436106100225760003560e01c8063e88250541461007957600080fd5b366100745760405162461bcd60e51b815260206004820152601b60248201527f446972656374206465706f73697473206e6f7420616c6c6f776564000000000060448201526064015b60405180910390fd5b600080fd5b61008c61008736600461023c565b61008e565b005b600081815b8181101561020057368585838181106100ae576100ae6102b3565b604002919091019150600090506100c860208301836102c9565b6001600160a01b0316036100ef576040516339e0d96d60e01b815260040160405180910390fd5b806020013560000361011457604051632bc59a5360e01b815260040160405180910390fd5b6101226020820135856102f9565b93503484111561014557604051633791e31960e01b815260040160405180910390fd5b600061015460208301836102c9565b6001600160a01b0316826020013560405160006040518083038185875af1925050503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b509091508190506101bb60208401846102c9565b836020013590916101f0576040516311f7d79f60e01b81526001600160a01b039092166004830152602482015260440161006b565b5050600190920191506100939050565b5060405134815233907f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd9060200160405180910390a250505050565b6000806020838503121561024f57600080fd5b823567ffffffffffffffff81111561026657600080fd5b8301601f8101851361027757600080fd5b803567ffffffffffffffff81111561028e57600080fd5b8560208260061b84010111156102a357600080fd5b6020919091019590945092505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156102db57600080fd5b81356001600160a01b03811681146102f257600080fd5b9392505050565b8082018082111561031a57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220ca8182cbf1c0905044126276a161076e0876c449d1d474a1243a8e7ebb71150464736f6c634300081c0033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c8063e88250541461007957600080fd5b366100745760405162461bcd60e51b815260206004820152601b60248201527f446972656374206465706f73697473206e6f7420616c6c6f776564000000000060448201526064015b60405180910390fd5b600080fd5b61008c61008736600461023c565b61008e565b005b600081815b8181101561020057368585838181106100ae576100ae6102b3565b604002919091019150600090506100c860208301836102c9565b6001600160a01b0316036100ef576040516339e0d96d60e01b815260040160405180910390fd5b806020013560000361011457604051632bc59a5360e01b815260040160405180910390fd5b6101226020820135856102f9565b93503484111561014557604051633791e31960e01b815260040160405180910390fd5b600061015460208301836102c9565b6001600160a01b0316826020013560405160006040518083038185875af1925050503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b509091508190506101bb60208401846102c9565b836020013590916101f0576040516311f7d79f60e01b81526001600160a01b039092166004830152602482015260440161006b565b5050600190920191506100939050565b5060405134815233907f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd9060200160405180910390a250505050565b6000806020838503121561024f57600080fd5b823567ffffffffffffffff81111561026657600080fd5b8301601f8101851361027757600080fd5b803567ffffffffffffffff81111561028e57600080fd5b8560208260061b84010111156102a357600080fd5b6020919091019590945092505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156102db57600080fd5b81356001600160a01b03811681146102f257600080fd5b9392505050565b8082018082111561031a57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220ca8182cbf1c0905044126276a161076e0876c449d1d474a1243a8e7ebb71150464736f6c634300081c0033",
  "devdoc": {
    "author": "Valentine Orga",
    "details": "Uses a single loop for efficiency, calldata structs to minimize gas, and robust error handling.",
    "events": {
      "FundsDistributed(address,uint256)": {
        "params": {
          "sender": "The address that initiated the distribution.",
          "totalAmount": "The total LYX amount distributed."
        }
      },
      "PaymentSent(address,uint256)": {
        "params": {
          "amount": "The amount of LYX sent.",
          "recipient": "The address that received the payment."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "distributeFunds((address,uint256)[])": {
        "details": "Requires that each recipient is a valid address and receives a non-zero amount.      The total distributed amount must match `msg.value`.",
        "params": {
          "payments": "An array of `Payment` structs containing recipient addresses and corresponding amounts."
        }
      }
    },
    "title": "Dispas - A Gas-Efficient LYX Distributor",
    "version": 1
  },
  "userdoc": {
    "events": {
      "FundsDistributed(address,uint256)": {
        "notice": "Emitted when LYX is successfully distributed to multiple recipients."
      },
      "PaymentSent(address,uint256)": {
        "notice": "Emitted when a single recipient successfully receives LYX."
      }
    },
    "kind": "user",
    "methods": {
      "distributeFunds((address,uint256)[])": {
        "notice": "Distributes LYX to multiple recipients."
      }
    },
    "notice": "This contract allows users to split LYX payments among multiple recipients.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}