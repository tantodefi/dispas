{
  "address": "0x4E581D6a88bc7D60D092673904d961B6b0961A40",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stealthMetaAddress",
          "type": "string"
        }
      ],
      "name": "StealthMetaAddressSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        }
      ],
      "name": "getStealthMetaAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "stealthMetaAddress",
          "type": "string"
        }
      ],
      "name": "setStealthMetaAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "registrant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "stealthMetaAddress",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "setStealthMetaAddressFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xee2752b825fc43762a917121d16cc0b0dfe9900c985192a8a34c01d0f4f2ddf8",
  "receipt": {
    "to": null,
    "from": "0xB632C03F4F7fd78Ebb26E7E4c35e42Eba33E7e0e",
    "contractAddress": "0x4E581D6a88bc7D60D092673904d961B6b0961A40",
    "transactionIndex": 0,
    "gasUsed": "494901",
    "logsBloom": "0x
    "blockHash": "0x2deea3d4d7231a2670c824babcc2247d24de2efbbf3a2cf5ad28cc44ffad2e48",
    "transactionHash": "0xee2752b825fc43762a917121d16cc0b0dfe9900c985192a8a34c01d0f4f2ddf8",
    "logs": [],
    "blockNumber": 4409760,
    "cumulativeGasUsed": "494901",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "edf28929d8bbc2a30c5107a89d856835",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stealthMetaAddress\",\"type\":\"string\"}],\"name\":\"StealthMetaAddressSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"}],\"name\":\"getStealthMetaAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stealthMetaAddress\",\"type\":\"string\"}],\"name\":\"setStealthMetaAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"registrant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stealthMetaAddress\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"setStealthMetaAddressFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocol/ERC5564Registry.sol\":\"ERC5564Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/protocol/ERC5564Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\ninterface IERC5564Registry {\\n    event StealthMetaAddressSet(address indexed registrant, string stealthMetaAddress);\\n\\n    function setStealthMetaAddress(string memory stealthMetaAddress) external;\\n    function setStealthMetaAddressFor(\\n        address registrant,\\n        string memory stealthMetaAddress,\\n        bytes memory signature\\n    ) external;\\n    function getStealthMetaAddress(address registrant) external view returns (string memory);\\n}\\n\\ncontract ERC5564Registry is IERC5564Registry {\\n    mapping(address => string) private _stealthMetaAddresses;\\n\\n    function setStealthMetaAddress(string memory stealthMetaAddress) external {\\n        _stealthMetaAddresses[msg.sender] = stealthMetaAddress;\\n        emit StealthMetaAddressSet(msg.sender, stealthMetaAddress);\\n    }\\n\\n    function setStealthMetaAddressFor(\\n        address registrant,\\n        string memory stealthMetaAddress,\\n        bytes memory signature\\n    ) external {\\n        bytes32 messageHash = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19Ethereum Signed Message:\\\\n32\\\",\\n                keccak256(abi.encodePacked(stealthMetaAddress))\\n            )\\n        );\\n        address signer = recoverSigner(messageHash, signature);\\n        require(signer == registrant, \\\"Invalid signature\\\");\\n\\n        _stealthMetaAddresses[registrant] = stealthMetaAddress;\\n        emit StealthMetaAddressSet(registrant, stealthMetaAddress);\\n    }\\n\\n    function getStealthMetaAddress(address registrant) external view returns (string memory) {\\n        return _stealthMetaAddresses[registrant];\\n    }\\n\\n    function recoverSigner(bytes32 messageHash, bytes memory signature) internal pure returns (address) {\\n        require(signature.length == 65, \\\"Invalid signature length\\\");\\n\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n\\n        assembly {\\n            r := mload(add(signature, 32))\\n            s := mload(add(signature, 64))\\n            v := byte(0, mload(add(signature, 96)))\\n        }\\n\\n        if (v < 27) v += 27;\\n        require(v == 27 || v == 28, \\\"Invalid signature 'v' value\\\");\\n\\n        return ecrecover(messageHash, v, r, s);\\n    }\\n} \",\"keccak256\":\"0xdb17b4be2d9944768ce4ec10e974397327eb8e2643026bcf3f460ac44549dc55\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506107fe8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630e35f9711461004657806398971edb1461005b578063abe4436514610084575b600080fd5b610059610054366004610501565b610097565b005b61006e61006936600461058e565b6101de565b60405161007b91906105cd565b60405180910390f35b610059610092366004610600565b61028a565b6000826040516020016100aa919061063d565b60408051601f198184030181529082905280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000091830191909152603c820152605c01604051602081830303815290604052805190602001209050600061011782846102e8565b9050846001600160a01b0316816001600160a01b0316146101735760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b6001600160a01b038516600090815260208190526040902061019585826106e2565b50846001600160a01b03167f6a331fe6533c8100e998ea7e7bcbf6cc0b0f6714967cb71eb35f8e75c2ad15d7856040516101cf91906105cd565b60405180910390a25050505050565b6001600160a01b038116600090815260208190526040902080546060919061020590610659565b80601f016020809104026020016040519081016040528092919081815260200182805461023190610659565b801561027e5780601f106102535761010080835404028352916020019161027e565b820191906000526020600020905b81548152906001019060200180831161026157829003601f168201915b50505050509050919050565b3360009081526020819052604090206102a382826106e2565b50336001600160a01b03167f6a331fe6533c8100e998ea7e7bcbf6cc0b0f6714967cb71eb35f8e75c2ad15d7826040516102dd91906105cd565b60405180910390a250565b6000815160411461033b5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640161016a565b60208201516040830151606084015160001a601b81101561036457610361601b826107a1565b90505b8060ff16601b148061037957508060ff16601c145b6103c55760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207369676e6174757265202776272076616c75650000000000604482015260640161016a565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610418573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b80356001600160a01b038116811461044557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561047b5761047b61044a565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156104aa576104aa61044a565b6040528381529050808284018510156104c257600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126104eb57600080fd5b6104fa83833560208501610460565b9392505050565b60008060006060848603121561051657600080fd5b61051f8461042e565b9250602084013567ffffffffffffffff81111561053b57600080fd5b610547868287016104da565b925050604084013567ffffffffffffffff81111561056457600080fd5b8401601f8101861361057557600080fd5b61058486823560208401610460565b9150509250925092565b6000602082840312156105a057600080fd5b6104fa8261042e565b60005b838110156105c45781810151838201526020016105ac565b50506000910152565b60208152600082518060208401526105ec8160408501602087016105a9565b601f01601f19169190910160400192915050565b60006020828403121561061257600080fd5b813567ffffffffffffffff81111561062957600080fd5b610635848285016104da565b949350505050565b6000825161064f8184602087016105a9565b9190910192915050565b600181811c9082168061066d57607f821691505b60208210810361068d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106dd57806000526020600020601f840160051c810160208510156106ba5750805b601f840160051c820191505b818110156106da57600081556001016106c6565b50505b505050565b815167ffffffffffffffff8111156106fc576106fc61044a565b6107108161070a8454610659565b84610693565b6020601f821160018114610744576000831561072c5750848201515b600019600385901b1c1916600184901b1784556106da565b600084815260208120601f198516915b828110156107745787850151825560209485019460019092019101610754565b50848210156107925786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60ff818116838216019081111561042857634e487b7160e01b600052601160045260246000fdfea2646970667358221220789032003e24e232445bc805eba95b67a5a92b9085cfe9fb4e16fbb2a93dff1d64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80630e35f9711461004657806398971edb1461005b578063abe4436514610084575b600080fd5b610059610054366004610501565b610097565b005b61006e61006936600461058e565b6101de565b60405161007b91906105cd565b60405180910390f35b610059610092366004610600565b61028a565b6000826040516020016100aa919061063d565b60408051601f198184030181529082905280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000091830191909152603c820152605c01604051602081830303815290604052805190602001209050600061011782846102e8565b9050846001600160a01b0316816001600160a01b0316146101735760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b6001600160a01b038516600090815260208190526040902061019585826106e2565b50846001600160a01b03167f6a331fe6533c8100e998ea7e7bcbf6cc0b0f6714967cb71eb35f8e75c2ad15d7856040516101cf91906105cd565b60405180910390a25050505050565b6001600160a01b038116600090815260208190526040902080546060919061020590610659565b80601f016020809104026020016040519081016040528092919081815260200182805461023190610659565b801561027e5780601f106102535761010080835404028352916020019161027e565b820191906000526020600020905b81548152906001019060200180831161026157829003601f168201915b50505050509050919050565b3360009081526020819052604090206102a382826106e2565b50336001600160a01b03167f6a331fe6533c8100e998ea7e7bcbf6cc0b0f6714967cb71eb35f8e75c2ad15d7826040516102dd91906105cd565b60405180910390a250565b6000815160411461033b5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640161016a565b60208201516040830151606084015160001a601b81101561036457610361601b826107a1565b90505b8060ff16601b148061037957508060ff16601c145b6103c55760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964207369676e6174757265202776272076616c75650000000000604482015260640161016a565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610418573d6000803e3d6000fd5b5050506020604051035193505050505b92915050565b80356001600160a01b038116811461044557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561047b5761047b61044a565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156104aa576104aa61044a565b6040528381529050808284018510156104c257600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126104eb57600080fd5b6104fa83833560208501610460565b9392505050565b60008060006060848603121561051657600080fd5b61051f8461042e565b9250602084013567ffffffffffffffff81111561053b57600080fd5b610547868287016104da565b925050604084013567ffffffffffffffff81111561056457600080fd5b8401601f8101861361057557600080fd5b61058486823560208401610460565b9150509250925092565b6000602082840312156105a057600080fd5b6104fa8261042e565b60005b838110156105c45781810151838201526020016105ac565b50506000910152565b60208152600082518060208401526105ec8160408501602087016105a9565b601f01601f19169190910160400192915050565b60006020828403121561061257600080fd5b813567ffffffffffffffff81111561062957600080fd5b610635848285016104da565b949350505050565b6000825161064f8184602087016105a9565b9190910192915050565b600181811c9082168061066d57607f821691505b60208210810361068d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106dd57806000526020600020601f840160051c810160208510156106ba5750805b601f840160051c820191505b818110156106da57600081556001016106c6565b50505b505050565b815167ffffffffffffffff8111156106fc576106fc61044a565b6107108161070a8454610659565b84610693565b6020601f821160018114610744576000831561072c5750848201515b600019600385901b1c1916600184901b1784556106da565b600084815260208120601f198516915b828110156107745787850151825560209485019460019092019101610754565b50848210156107925786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60ff818116838216019081111561042857634e487b7160e01b600052601160045260246000fdfea2646970667358221220789032003e24e232445bc805eba95b67a5a92b9085cfe9fb4e16fbb2a93dff1d64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 598,
        "contract": "contracts/protocol/ERC5564Registry.sol:ERC5564Registry",
        "label": "_stealthMetaAddresses",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}